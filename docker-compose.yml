version: '3.8'

services:
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - monitoring-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  cloudwatch-exporter:
    container_name: cloudwatch-exporter
    image: prom/cloudwatch-exporter
    ports:
      - "9106:9106"
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_KEY}
      AWS_REGION: ap-northeast-2
      CLOUDWATCH_CONFIG_CONTENT: |
        region: ap-northeast-2
        metrics:
          - aws_namespace: AWS/CloudFront
            aws_metric_name: Requests
            aws_dimensions: [DistributionId]
            aws_statistics: [Sum]
            period_seconds: 300
    entrypoint: >
      sh -c "
        echo \"$CLOUDWATCH_CONFIG_CONTENT\" > /config/cloudwatch-config.yml &&
        cat /config/cloudwatch-config.yml &&
        /cloudwatch_exporter --config.file=/config/cloudwatch-config.yml
      "
    networks:
      - monitoring-network
    depends_on:
      prometheus:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-q", "--tries=1", "--spider", "http://localhost:9106/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3


  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - monitoring-network
    depends_on:
      prometheus:
        condition: service_healthy
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    networks:
      - monitoring-network
    restart: unless-stopped

volumes:
  prometheus_data:
  grafana_data:

networks:
  monitoring-network:
    driver: bridge
